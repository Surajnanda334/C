//Stack data structure
#include <iostream>
#include <string>

using namespace std;

class Stack{
private:
    int top;
    int arr[5];
public:
    Stack()
    {
        top = -1;
        for(int i=0; i<5;i++)
        {
            arr[i]=0;
        }
    }

    bool isEmpty()
    {
        if(top == -1)
        {
            return true;
        } else{
            return false;
        }
    }

    bool isFull()
    {
        if(top == 4)
        {
            return true;
        } else{
            return false;
        }
    }

    void push(int val)
    {
        if(isFull())
        {
            cout<<"Stack Overflow"<<endl;
        } else{
            top++;
            arr[top] = val;
        }
    }

    int pop()
    {
        if(isEmpty())
        {
            cout<<"Stack Underflow"<<endl;
            return 0;
        } else{
            int popValue = arr[top];
            arr[top] = 0;
            top--;
            return popValue;
        }
    }

    int count()
    {
        return(top+1);
    }

    int peek(int pos)
    {
        if(isEmpty())
        {
            cout<<"Stack Underflow"<<endl;
            return 0;
        } else{
            return arr[pos];
        }
    }

    void change(int pos, int val)
    {
        arr[pos] = val;
        cout<<"Item changed at the location"<<pos<<endl;
    }

    void display()
    {
        cout<<"All values in the stack are"<<endl;
        for(int i=4;i>=0;i--)
        {
            cout<<arr[i]<<endl;
        }
    }
};

int main()
{
    Stack s1;
    int option,position,value;

    do{

        cout<<"1. Push"<<endl<<"2. Pop"<<endl<<"3. Empty"<<endl<<"4. Full"<<endl<<"5. Peek"<<endl<<"6. Count"<<endl<<"7. Change"<<endl<<"8. Display"<<endl<<"9. Clear Screen"<<endl;
        cout<<"Enter 0 for exit"<<endl;
        cout<<"Choose the option:- ";
        cin>>option;
        switch(option)
        {
            case 1:
                cout<<"Enter a value :-";
                cin>>value;
                s1.push(value);
                break;

            case 2:
                cout<<"Value"<<s1.pop()<<endl;
                break;
            case 3:
                if(s1.isEmpty())
                {
                    cout<<"Stack is empty"<<endl;
                } else{
                    cout<<"Stack is not empty"<<endl;
                }
                break;
            case 4:
                if(s1.isFull())
                {
                    cout<<"Stack is full"<<endl;
                } else{
                    cout<<"Stack is not full"<<endl;
                }
                break;
            case 5:
                cout<<"Enter the position to peek:- "<<endl;
                cin>>position;
                cout<<"Value:- "<<s1.peek(position)<<endl;
                break;
            case 6:
                cout<<"Count is :- "<<s1.count()<<endl;
            case 7:
                cout<<"Enter the position & value:- "<<endl;
                cin>>position>>value;
                s1.change(position,value);
                break;
            case 8:
                s1.display();
                break;
            case 9:
                system("cls");
                break;
            default:
                cout<<"Enter the correct option";
        }
    }while(option != 0);
    return 0;
}